{"pageProps":{"posts":[{"date":"Mon Dec 11 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"adoption-tracking-methods","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"Tracking Design System Adoption — Where Do We Get the Data From?\"\n  date=\"2023-12-11\"\n  description=\"Explore the transformative journey from task-focused metrics to goal-oriented strategies in design systems. Learn how shifting from output to outcome can align design systems with broader organizational objectives. Discover various methods to track design system adoption, including surveys, 3rd-party tools, injected scripts, and GitHub searches. Understand their pros and cons, and how they contribute to a dynamic, user-focused design system evolution.\"\n  seo={{\n    desc: \"Explore the transformative journey from task-focused metrics to goal-oriented strategies in design systems. Learn how shifting from output to outcome can align design systems with broader organizational objectives. Discover various methods to track design system adoption, including surveys, 3rd-party tools, injected scripts, and GitHub searches. Understand their pros and cons, and how they contribute to a dynamic, user-focused design system evolution.\"\n  }}>\n\nIn \"Impact Players,\" Liz Wiseman uses a specific example of a department responsible for training employees to\nillustrate her point about the difference between task completion and goal aiming. Initially, this department\nmeasured its success based on the quantity of training sessions provided, a classic example of focusing on\ntask completion. They diligently counted the number of training programs delivered, essentially ticking off\na checklist of activities. However, this metric didn't resonate with upper management. The reports generated\nby the department, which focused on these quantitative measures, failed to capture the interest or attention of\nsenior leaders. This situation is a classic example of how focusing solely on task completion can lead to a\ndisconnect with organizational goals and fail to demonstrate real impact.\n\n![](./thumb.png)\n\nThe shift occurred when the department changed its key performance indicator (KPI) to measure the actual\neducational advancement of the employees – a goal-aiming approach. This new metric aligned more closely with\nthe broader organizational objectives of enhancing employee skills and capabilities. By focusing on the outcome\nof training – the improved education level of employees – rather than just the output (number of training\nsessions conducted), the department's work suddenly became much more relevant and impactful from the\nperspective of the upper management. This change in measurement criteria underscored the value of understanding\nand aligning with the organization’s larger goals. It demonstrated how shifting focus from mere task completion\nto aiming for overarching objectives can create a more meaningful impact and garner greater support and\nrecognition from higher-ups in the organization.\n\nThis concept mirrors the challenges in managing design systems.\nIn a task-oriented approach to a design system, the focus would be on the release of a certain number of\ncomponents. Here, the team would concentrate on the specifics – creating individual UI elements, documenting\nthem, and ensuring they are available for use. This approach is akin to ticking boxes off a checklist: create\na button, a dropdown menu, a modal, etc. The team's success would be measured by how many components they've\ndeveloped and released. While this method ensures the delivery of tangible assets, it doesn't necessarily\nreflect the actual effectiveness or integration of those components in real projects.\n\nA more meaningful measure is the adoption rate of the design system, focusing not just on the output but on\nthe outcome.\nThis perspective aligns more closely with the overarching objective of a design system, which is to streamline\nand improve the design and development process across an organization. Instead of merely counting the number of\ncomponents created, the team's efforts would be directed towards how these components are being utilized in\nprojects, how they enhance consistency and efficiency, and how they can be improved based on user feedback. In\nthis approach, the team would measure success not just by output (number of components) but by outcome (rate of\nadoption and improvement). This would lead to a more dynamic, user-focused design system, constantly evolving\nin response to the needs of its users and the goals of the organization.\n\nTo transition from a task-oriented to a goal-oriented approach in managing a design system,\nit's essential to have clear data on the system's adoption and usage. Understanding and improving this\naspect of the design system requires gathering accurate data on how developers are using the system,\nwhich components are most popular, where gaps might exist, and how the system influences the efficiency\nand consistency of development work.\n\nTracking the adoption rate is crucial for understanding a design system's impact and effectiveness\nwithin an organization. Here are some methods for tracking:\n\nTracking the adoption rate of a design system is crucial for understanding its impact and effectiveness within an organization. Here are some methods that a design system team can use to track this rate:\n\n1. **Regular Surveys**,\n2. **Using 3rd-party Tools**,\n3. **Gathering Own Stats via an Injected Script**,\n4. **Gathering Stats Using GitHub Search**.\n\nEach of these methods has strengths and weaknesses.\n\n### Tracking Using Surveys\n\nSurveys provide a direct channel to gather feedback from teams using the design system.\nThey can be structured to inquire about the frequency and manner of component usage, offering qualitative\ninsights into user satisfaction and potential areas for improvement. \n\n### Tracking Using 3rd-Party Tools\n\n3rd-party tools offer a more data-centric perspective. Tools like [Omlet](https://omlet.dev/),\n[Componly](https://componly.co/), and [Stylebit](https://stylebit.io/adoption) provide analytics and\ninsights into the usage patterns of design system components across various projects. These tools can\ntrack specific components' usage, customization, and performance, offering quantitative data that is\nobjective and insightful for understanding system implementation.\n\n### Tracking Using Injected Script\n\nThe method of using an injected script involves integrating a custom script into the development environment.\nThis script collects data on component usage, frequency, and context, providing real-time, accurate data\ndirectly from the source. This approach is highly customizable, allowing teams to tailor the tracking to\ntheir specific needs.\n\n### Tracking Using GitHub Search\n\nFor organizations utilizing GitHub, searching within the organization's repositories can reveal how\nextensively and in what ways the design system is being used. This method offers a broad, non-intrusive\noverview of adoption, requiring no additional tooling or scripts.\n\nWhen comparing these methods, several factors come into play:\n\n- **Accuracy and Depth of Data**: While surveys provide valuable qualitative insights, \nhey rely on self-reporting and may not always be accurate or unbiased. In contrast, 3rd-part\n tools and injected scripts offer more objective, quantitative data. GitHub search, while convenient,\n might not provide the depth of data that other methods offer.\n\n- **Technical Complexity and Resource Requirements**: Injected scripts require significant technical\nknow-how and ongoing maintenance, which may not be feasible for all teams. 3rd-party tools also require\nintegration into the development workflow but are generally easier to implement than custom scripts.\n\n- **Privacy and Security Considerations**: Injecting scripts into the development environment raises concerns\nabout privacy and security. It's crucial to ensure these scripts do not infringe on developers' privacy or\ncompromise security. 3rd-party tools may also raise similar concerns.\n\n- **Real-Time Insights**: Injected scripts provide real-time data, offering a dynamic view of component\nusage. In contrast, GitHub search results are limited to the latest code updates in the repositories,\nand surveys provide periodic insights.\n\n- **Ease of Use and Accessibility**: GitHub search is straightforward and accessible to anyone with\nrepository access, making it a user-friendly option. Surveys are also relatively easy to implement and\nparticipate in, compared to the technical requirements of scripts and some 3rd-party tools.\n\nThe choice of tracking method depends on the specific needs of the design system team, the resources available,\nand the organization's policies on data privacy and security.\n\n\n## What is next?\n\nAs we embark on the journey of gathering data, the path ahead is both intriguing and complex. The accumulation of\nthis data is only the beginning. The real task lies in transforming these raw numbers and feedback into meaningful,\nactionable strategies.\nThis is a vast and multifaceted topic,\nencompassing areas such as data analysis, strategic planning, and iterative development.\nMany questions arise. Why are certain components more popular? Why some are neglected?\nAre the tokens adopted and widely used?\nThe answers to these questions are keys to unlocking a more efficient, user-centric, and impactful design system.\n\nFor those seeking guidance and inspiration on this journey, resources such as the\n[Future of Design Systems 2023](https://intodesignsystems.gumroad.com/l/thefutureofdesignsystems) conference are\ninvaluable. Talks like the one by Varya Stepanova and Daniel Miebach on\n[Data-Driven Design System Management](https://app.pitch.com/app/public/player/3899f1a0-cd01-45b5-baab-51cc83fab3e7)\noffer a glimpse into the practical aspects of this approach.\n\n</LayoutBlog>","title":"Tracking Design System Adoption — Where Do We Get the Data From?","layout":"LayoutBlog","seo":{"desc":"Explore the transformative journey from task-focused metrics to goal-oriented strategies in design systems. Learn how shifting from output to outcome can align design systems with broader organizational objectives. Discover various methods to track design system adoption, including surveys, 3rd-party tools, injected scripts, and GitHub searches. Understand their pros and cons, and how they contribute to a dynamic, user-focused design system evolution.\n"}},{"date":"Tue Jul 04 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"aligning-designers-and-developers-thesis","content":"import LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"Aligning UX Designers and UI Developers through Design Systems\"\n  date=\"2023-07-04\"\n  description=\"Comprehensive review of Varya Stepanova's thesis on the role of design systems in aligning UX designers and UI developers. Uncover key insights into the challenges and solutions in UX/UI development, and understand the impact of design systems on the efficiency and effectiveness of the design process.\"\n  seo={{\n    desc: \"Comprehensive review of Varya Stepanova's thesis on the role of design systems in aligning UX designers and UI developers. Uncover key insights into the challenges and solutions in UX/UI development, and understand the impact of design systems on the efficiency and effectiveness of the design process.\"\n  }}>\n\nIn the rapidly evolving field of user interface (UI) creation, the alignment between UX\ndesigners and UI developers is a critical factor that can significantly impact the\nefficiency and effectiveness of the design and development process. This review delves into Varya Stepanova's insightful thesis on the role of design systems in bridging the gap between these two key players. As digital products continue to shape our lives and businesses, understanding the dynamics of UX/UI development and the potential solutions to its inherent challenges is of paramount importance. This review aims to provide a comprehensive analysis of Varya Stepanova's work, shedding light on her findings and their implications for both practitioners and researchers in the field. Whether you're a UX designer, a UI developer, a project manager, or simply someone interested in the intricacies of UI creation, this review offers valuable insights that can enhance your understanding and potentially inform your practice.\nIn her [thesis](https://varya.me/design-systems/aligning-ux-designers-and-ui-developers/), Varya Stepanova explores the role of design systems in bridging the gap between UX designers and UI developers in the process of UI creation. The author delves into the challenges faced by these two groups due to their different mental models and working methodologies, and how design systems can facilitate their collaboration.\n\nThe thesis begins by acknowledging the significant gap between design and development processes in software creation. The author identifies the need for a tool that can align the work of UX designers and UI developers, and proposes design systems as a potential solution. Design systems are defined as continuously evolving sets of reusable design and development elements of user interfaces that align with a company's brand identity and UX design principles.\n\nThe author presents a comprehensive analysis of the current state of UX/UI development, highlighting the challenges at the project, process, and personal levels. The study reveals that the traditional \"design-agency\" model, where designs are created upfront and passed to developers for implementation, often leads to inefficiencies and miscommunications. The author suggests that a more iterative and collaborative approach, such as the dual-track agile workflow, could be more effective.\n\nThe thesis also explores the concept of \"design breakdowns,\" which are impediments that must be fixed before a design can be implemented. These breakdowns can be caused by missing information, edge cases, and technical constraints, and often lead to significant delays and rework.\n\nDesign systems are proposed as a solution to these issues. By providing a shared language and set of components, design systems can help align the work of designers and developers, reducing the occurrence of design breakdowns and improving the efficiency of the design-and-development process.\n\n![](./mddw.png)\n\nThe author concludes that using design systems can bring projects and organizations to higher levels of maturity according to the Capability Maturity Model Integration (CMMI-DEV) representation. The study recommends the use of design systems to speed up the design-and-development process and enhance the maturity level of this process and the organization.\n\nIn summary, this thesis provides a detailed and insightful exploration of the role of design systems in aligning UX designers and UI developers. It presents a compelling argument for the adoption of design systems as a tool to improve the efficiency and effectiveness of UI creation. The research is well-grounded in existing literature and provides valuable recommendations for both practitioners and researchers in the field.\n\nThe thesis is well-structured and logically organized, making it easy to follow the author's arguments and understand the key points. The author's use of real-world examples and case studies adds depth to the discussion and helps to illustrate the practical implications of the research.\n\nOne of the strengths of the thesis is its comprehensive literature review, which provides a solid foundation for the author's arguments. The author critically analyzes the existing literature and identifies gaps in the current understanding of the role of design systems in UX/UI development. This thorough review of the literature not only strengthens the author's arguments but also highlights the originality and significance of the research.\n\nThe author's discussion of the challenges faced by UX designers and UI developers is particularly insightful. The author not only identifies these challenges but also explores their underlying causes, providing a nuanced understanding of the complexities of UX/UI development. This deep understanding of the challenges informs the author's proposed solutions, making them more credible and convincing.\n\nThe author's proposal to use design systems as a tool to align the work of UX designers and UI developers is well-argued and supported by evidence. The author provides a clear explanation of how design systems can help to overcome the challenges identified in the research, making a strong case for their adoption.\n\nThe author's conclusion that using design systems can enhance the maturity level of the design-and-development process and the organization is an important contribution to the field. This finding has significant implications for both practice\n\nand research, suggesting that the adoption of design systems can lead to improved efficiency and effectiveness in UI creation.\n\nThe thesis also provides valuable insights into the concept of \"design breakdowns\" and their impact on the design-and-development process. The author's exploration of this concept adds depth to the understanding of the challenges faced in UX/UI development and highlights the need for tools and approaches that can help to prevent these breakdowns.\n\nOne potential area for further research suggested by the thesis is the exploration of how design systems can be effectively integrated into different organizational contexts. While the author provides a compelling argument for the adoption of design systems, the practicalities of implementing these systems in different organizational contexts are not fully explored. Future research could investigate this issue, providing further insights into the effective use of design systems in practice.\n\nThe thesis could also benefit from a more detailed exploration of the potential limitations and challenges of using design systems. While the author acknowledges that design systems are not a panacea for all the challenges faced in UX/UI development, a more detailed discussion of the potential drawbacks and limitations of these systems would provide a more balanced view.\n\nOverall, this thesis makes a significant contribution to the understanding of the role of\ndesign systems in aligning UX designers and UI developers. The author's thorough analysis of\nthe challenges faced in UX/UI development and the proposed solutions provide valuable insights\nfor both practitioners and researchers in the field. The thesis is well-written,\nlogically organized, and grounded in a comprehensive review of the literature, making it a\nvaluable resource for anyone interested in the field of UX/UI development. To fully appreciate\nthe depth of Varya Stepanova's research and the potential impact of her findings, it is\nhighly recommend delving into [the full text of the thesis](https://varya.me/design-systems/aligning-ux-designers-and-ui-developers/). \n\n</LayoutBlog>","title":"Aligning UX Designers and UI Developers through Design Systems","layout":"LayoutBlog","seo":{"desc":"Comprehensive review of Varya Stepanova's thesis on the role of design systems in aligning UX designers and UI developers. Uncover key insights into the challenges and solutions in UX/UI development, and understand the impact of design systems on the efficiency and effectiveness of the design process. \n"}},{"date":"Mon Jun 26 2023 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"parts-exercise","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"Parts of Design Systems - An Interactive Workshop Exercise\"\n  date=\"2023-06-26\"\n  description=\"Explore our interactive workshop exercise, 'The Parts of a Design System'. Discover a unique tool to select and discuss your ideal design system components. Inspired by Nathan Curtis, our online exercise fosters collaboration and aligns team vision, aiding in creating or refining your design system. Try it out today!\"\n  seo={{\n    desc: \"Explore our interactive workshop exercise, 'The Parts of a Design System'. Discover a unique tool to select and discuss your ideal design system components. Inspired by Nathan Curtis, our online exercise fosters collaboration and aligns team vision, aiding in creating or refining your design system. Try it out today!\"\n  }}>\n\nToday, we are thrilled to share a small exercise called 'The Parts of a Design System' to\nhelp guide you in building your optimal design system. This collaborative exercise, which can\nbe performed individually or as a team, enables participants to identify, select, and discuss\nthe most desirable components for their future design system. It's a brilliant way to open\nup discussions, find common ground, and begin mapping out your design journey!\n\nInspired by [Nathan Curtis](https://medium.com/@nathanacurtis)'s innovative offline approach,\nour team has digitized the exercise, transforming it into an interactive online application.\nWhether you're brainstorming the architecture of your future design system or evaluating the\nstatus of your current one, this exercise will provide insightful and valuable data points\nto direct your efforts.\n\n## How Does 'The Parts of a Design System' Exercise Work?\n\nThe interactive application guides participants through a series of instructions. You'll be\nprompted to select parts that resonate with your vision for your ideal design system.\nYou can use this exercise to evaluate your existing design system as well, identifying\nthe components you already possess. \n\nOnce the exercise is completed, your results are saved as a PNG file, facilitating easy\nsharing with your team members through your preferred communication channels. The image serves as a\nvisual representation of your selected parts, illustrating where your design system stands today and\nthe potential evolution towards your ideal system.\n\n## Why is this Exercise Important?\n\nThe beauty of this exercise lies in its simplicity and versatility. It doesn't matter if your team\nis on the same page or has divergent ideas about the ideal design system. The 'Parts of a Design System\nexercise brings everyone to a common platform to discuss, debate, and align their visions.\n\nPerhaps the most significant value comes from any mismatches that arise between team members. Contrasting\nvisions can spark meaningful dialogues, allowing for a more comprehensive exploration of what works\nbest for your team and project.\n\nMoreover, when used for evaluation, it helps teams visualize their design system's current state. By\ncomparing this snapshot with your ideal system, you'll be able to identify where to focus your\nefforts to bridge the gap.\n\n\nWe welcome you to try out the exercise here: https://bridge-the-gap.dev/workshops/parts-of-design-system/. \n\nDo share your experiences and any interesting insights gained from this exercise. We're excited to see\nthe diverse and innovative design systems you'll build!\n\nStay tuned for more such engaging content and exercises aimed at enhancing your design system journey.\n\n</LayoutBlog>","title":"Parts of Design Systems - An Interactive Workshop Exercise","layout":"LayoutBlog","seo":{"desc":"Explore our interactive workshop exercise, 'The Parts of a Design System'. Discover a unique tool to select and discuss your ideal design system components. Inspired by Nathan Curtis, our online exercise fosters collaboration and aligns team vision, aiding in creating or refining your design system. Try it out today!\n"}},{"date":"Sun Mar 06 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"team-intro","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"Design System Team — Experience and Career Goals\"\n  date=\"2022-03-06\"\n  description=\"The interview features three design-system consultants from Bridge the Gap agency, Varya, Irina, and Alex, who discuss the importance of design systems in modern software development. The team talks about their backgrounds and how they came together, with a focus on their current projects in React and Web Components. They also touch on the emerging fields of DesignOps and FrontEndOps and their career aspirations.\"\n  seo={{\n    desc: \"The interview features three design-system consultants from Bridge the Gap agency, Varya, Irina, and Alex, who discuss the importance of design systems in modern software development. The team talks about their backgrounds and how they came together, with a focus on their current projects in React and Web Components. They also touch on the emerging fields of DesignOps and FrontEndOps and their career aspirations.\"\n  }}>\n\n*Hey there! Today, I’m chatting with Varya, Irina, and Alex, three design-system\nconsultants from Bridge the Gap agency. They're going to share their views on\nthe role of design systems in modern software development. Let's start with some\nintroductions. Varya, would you like to begin?*\n\n![](./team.jpg)\n\nPhoto by <a href=\"https://unsplash.com/@brookecagle?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Brooke Cagle</a> on <a href=\"https://unsplash.com/s/photos/it-team-women?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n\n**Varya:** Hi everyone! My name is Varya, and I'm a design systems and front-end architecture consultant with years of experience. I'm currently working with the team you're meeting today.\n\n**Irina:** Hi, I'm Irina, a front-end developer with a focus on React/TypeScript stack. I love exploring new tech and currently working on a large enterprise application while also consulting on design systems.\n\n**Alex:** Hey, I'm Alex, a front-end developer who primarily works with React and JS. I'm learning Web Components now.\n\n*So, where are you all based?*\n\n**Varya:** I'm from Espoo, Finland.\n\n**Irina:** I'm from Greece.\n\n**Alex:** I'm from Vantaa, Finland.\n\n*Interesting! How did you all end up on the same team?*\n\n**Irina:** I was Varya's intern a few years back, and we worked together on some amazing projects. We continue to collaborate to this day, even doing design system workshops together.\n\n**Alex:** I stumbled upon Varya's internship on Twitter, and my husband sent me the same link from his IT-chat. After an interview and some waiting, I was offered the job.\n\n**Varya:** As a solo consultant, I was on the lookout for people to join me on projects. When I met Irina and Alex, I knew they would be a great fit, and so far, we make an awesome team. We work remotely, which is a great bonus thanks to the pandemic.\n\n*What's your team's focus right now?*\n\n**Varya:** We are working on design systems projects in React and Web Components technologies. But we're open to exploring new things.\n\n**Irina:** Design systems are what I love doing the most. I want to grow our team and work on exciting new projects.\n\n**Varya:** For me, bridging design and development is what we excel at. Our team is great at managing this balance, and I believe we can take it to the next level with DesignOps and FrontEndOps.\n\n*What are those?*\n\n**Varya:** DesignOps and FrontEndOps are processes that focus on optimizing the pipelines and scripts we write for projects. While DevOps is prevalent, we think FrontEndOps or DesignSystemOps are specialized fields that require special attention.\n\n**Irina:** I agree. There is a unique set of challenges when dealing with design systems that need attention.\n\n*Great! Thank you all for chatting with me today. Your insights are invaluable, and I wish you all the best in your future endeavors!*\n\n</LayoutBlog>","title":"Design System Team — Experience and Career Goals","layout":"LayoutBlog","seo":{"desc":"The interview features three design-system consultants from Bridge the Gap agency, Varya, Irina, and Alex, who discuss the importance of design systems in modern software development. The team talks about their backgrounds and how they came together, with a focus on their  urrent projects in React and Web Components. They also touch on the emerging fields of DesignOps and FrontEndOps and their career aspirations.\n"}},{"date":"Thu Jul 29 2021 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"what-is-a-design-system","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"What is a design system?\" \n  date=\"2021-07-29\" \n  description=\"And why it is more than just a library or a style guide\" \n  seo={{\n  desc: \"The concept of design systems is much wider than how it is often understood. Design systems are shared practices - so they mean components and patterns; design systems are shared tools - so they mean automations and optimizations; design systems are processes - so they are in the management domain; and design systems are people - so they are about the community and collaboration.\",\n  canonical: \"https://varya.me/design-systems/what-is-a-design-system/\"\n}}>\n\n\nLet's start with a story.\n\n<i>\n\nRecently, I was talking about design systems infrastructure at the awesome React Finland conference. The day before the\nconference, there was a traditional dinner for speakers. I like this tradition as it makes possible for us speakers to\nmeet our fellows and the conference organizers so that the next days we work as a team to provide the very best event. As\nusual, we were asking each other what the talks are about. When it was my turn, I started to explain that my talk is\ngoing to be about building infrastructure for a design system and particularly a design system website. One person\ninterrupted me with a question \"A style guide?\". And that is the key issue. Many people think that **design systems**\nare\nequal to **style guides**. But they are much more, they must be much more. On this page, I show what is a design system from\ndifferent perspectives: design, development, project and even business.\n\n</i>\n\n![](./figure11.png)\n\n## What is a design system for me?\n\nWe can have a look at who are the actual or potential users of design systems, and what are their professional needs in\nthis context.\n\n\nDesign systems are often understood as libraries of components. In this regard, the developers are seeing the system\nmostly from this perspective. Developers would like to have documentation for every component, examples of usage and\nmaybe explanation of the implementation details. Apart from that, they would need information related to the whole\nsystem. Such as release notes, instructions for linking the library to the project, etc. For contribution, they need to\nknow what is the library code style and contribution policy. To give feedback, they need the contact information of the design system team and/or access to relevant boards or chats.\n\n\n\nDesigners also need documentation for every pattern, especially the reasons behind them. Other design-related\ndocumentation such as color palette, spacing examples, tone of voice, and many more helps them to create new patterns\nwhich are coherent with the rest of the system. They also need information about how to collaborate with other fellow\ndesigners and what are the tools to use. Designers are interested in seeing their creations alive, thus they\nneed to know how the process goes further on the development and later stages.\n\n\n\nProject managers or owners need to have a basic representation of the design system since this is what is used to build the\ninterface for their product. They are also interested in release notes as in something that has been implemented. Apart from that, managers need to know the design system's nearest future or, in particular, what new components are going to be\nreleased and what are the upcoming changes to the existing ones. For that, managers need to see the design system's\nroadmap and learn its strategy as well as be able to discuss this with the relevant people.\n\n\n\nOn the business levels of the company, especially if speaking about mid-size or large companies, design systems are seen\nas internal products and tools. People of this specialization need to have a larger scale picture of the system.\nAlso, they must be especially interested into design system's meta information such as what is its impact, how it helps\nin-team and cross-team collaboration and maybe even the numbers of how much the company earns and saves thanks to the\ndesign system.\n\n\n## Design system — what is behind?\n\nDesign systems are yet evolving concept, our understanding of them is changing. But for sure a design system must serve the\nneeds of all the people involved in product creation and managing the company. This brings us to the conclusion that **a design\nsystem is not equal to a library of components or to a style guide, it is something bigger**. From my experience, a\nfunctioning and living design system means the following.\n\n#### Shared practices\n\n\nDesign system provides and documents shared practices, based on which you design your product or a bunch of products under\nthe same brand. A library of components and style guide as their documentation are such shared practices. However,\nshared practices are not limited to them but also include more abstract or more design related things such as visual\nlanguage or tone of voice. Or on the contrary, they can be deeply technical and reflect your approach to code (aka code\nstyle).\n\n\n#### Tools\n\n\nThis brings us to the tools which our company could have for all the developers and designers to share. This means\nprofessional software to use and its plugins, scripts for processing and optimizing visuals and code, development and\ndesign environment, etc.\n\n\n#### Processes\n\nAt the next level, design systems would mean the processes which are followed in the company to achieve the outlined\ngoals. Often spoken that design systems bridge the gap between specializations. This means that the design system should\nestablish the processes in teams or even on the company level.\n\n\n#### Community\n\nThe processes bring us to those for whom they are created, or to the people. As mentioned above, design systems ensure multidisciplinary collaboration and are meant to help the working collective as a whole. In this regard, having a design\nsystem implies constant work with our fellow developers, designers and project owners as with a community.\n\n\n## Way to go\n\nA comprehensive design system would have all the aspects listed above; not only a style guide or a library but\ndocumentation and helpful tools for all the practices to follow, outlined and tuned processes for achieving the goals and\nhelping the routines as well as own community-related documentations, instruments, and actions.\n\nCreating and maintaining the design system is not limited to making visual designs and coding but does include service\ndesign, project and community management. Moreover, a design system tightly connected to brand and business of the company, so the\nmethods of running it have to be tailored for the specific organization and its teams. These are the topics for\nmany more articles and discussions (yet published [Maintaining design systems with proper user\nresearch](https://medium.com/elisa-design/maintaining-design-systems-with-user-research-3ba5feafc336) and presented\n[Building design systems that leverage your designers, developers, and\nproducts](http://varya.me/design-systems-thinking/)).\n\n<i>\n\nComing back to the story in very beginning, my talk was about documenting all the listed aspects at a company design\nsystem website and organizing the processes for its constant evolving: [slides](https://varya.me/react-finland-2019/),\n[video](https://youtu.be/gDkUpx0dVc0?t=9993).\n\n</i>\n\n![](./ds-infrastructure.png)\n\n\n#### Source\nThis article was originally published at [varya.me](https://varya.me/design-systems/what-is-a-design-system/).\n\n</LayoutBlog>","title":"What is a design system?","description":"And why it is more than just a library or a style guide","layout":"LayoutBlog","seo":{"desc":"The concept of design systems is much wider than how it is often understood. Design systems are shared practices - so they mean components and patterns; design systems are shared tools - so they mean automations and optimizations; design systems are processes - so they are in the management domain; and design systems are people - so they are about the community and collaboration.\n","canonical":"https://varya.me/design-systems/what-is-a-design-system/"}},{"date":"Sun Jul 25 2021 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"pattern-journey","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"Pattern Journey\"\n  date=\"2021-07-25\"\n  description=\"A process of maintaining and extending design systems\"\n  seo={{\n    desc: \"Visual illustration and explanation of what happens to a pattern on its way from identifying to actual implementation and how different the path might be depending on the situation. The Pattern Journey interactive tool helps to make more people in the organization involved into co-creation of design and development value under the Design Systems umbrella.\",\n    canonical: \"https://varya.me/design-systems/pattern-journey/\"\n  }}>\n\nDesign System artifacts whether it is a library of components, UI kit in Sketch, description of UI tokens or pieces of\ndocumentation for the visual language are maintained and developed similarly to regular products. However, usually,\nthere is a difference. A design system bridges the gap between disciplines and between the teams across the organization, so\nit requires involvement of all those stakeholders and their mutual contribution. To make this the most successful, a\nDesign System needs transparent processes and tools communicating these processes to all the people involved.\n\nAccording to a research I made in several organizations,\nthe lack of information is the most painful point for\nthe usual Design System users. Even well-documented Design Systems face this problem. Often a potential design-system\ncontributor does not have a focus on Design Systems as a concept and experience in maintaining the\nlibraries. At the same time, these representatives of the projects using Design Systems are the most important people to\nbe involved. Developing the actual projects, they have the most knowledge about the business needs of the company\napplications and are much more connected to the users than abstract design-system developers. Making these people\nsmoothly contribute to the Design System ensures its coverage, actuality, and instant expanding as well as saves the\nresources. This can be achieved with a very detailed guidance not only for the technical or design aspects of the Design\nSystem but also for its processes.\n\nTo start contribution, it is crucial to have a clear vision what to do in specific situations and have a support for\nmaking decisions. This aspect is being actively discussed in the community and some offer their solutions, for example,\nBrad Frost presents a decision tree:\n\n![](./pattern-addition-flowchart.png)<br/>\nSource: \"Maintaining Design Systems\" http://atomicdesign.bradfrost.com/chapter-5/\n\nBelow, I show an altered version in a form of an interactive component. This is a visual illustration of what happens to a\npattern on its way from identifying the need to actual implementation and how different the path might be depending on the\nsituation.\nThis process is called **Pattern Journey**.\n\n## Pattern Journey - Interactive Scheme\n\n![](./pattern-journey.png)\n\nThe scheme shows possible paths from identifying the need in a pattern to implementing it. Answers to the displayed questions help to\nchoose the right way. Note that **you can click on the questions** to get additional guidance on how to get the answer.\nFor a specific project, the instructions can be more detailed and contain links to communication channels, pages of\ndocumentation, repositories, Abstract spaces or Dropbox.\n\nIn the video, you can see how it works.\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kKnTN3EswnU\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n\n## Examples of paths through Pattern Journey\n\nThe patterns make different journeys if it is a completely new UI element, changing or expending the existing one or\nmigrating from a project to the library. Let me show you some (but not all situations). In each of them, a potential\ncontributor starts from the top of the scheme and goes further navigated with the questions and answers to them. The\nadditional text is what they see in the popup when they are wondering how they should find an answer to the questions.\n\n### Implementing a new component\n\n![](./pattern-journey__pattern-library--implement-new.png)\n\nTakes steps are:\n\n#### 1. Is the pattern in the library?\n\nYou can search for patterns at the <i>Design System / Pattern Libarary website</i>.\nFigure out what could be a name or a keyword for the pattern you are looking for, and use if in the website search.\n\nIf you don't find anything suitable, you can also ask other people in the\n<i>instant communication channels</i> like Slack / Flowdock / Mattermost etc.\n\nAnswer: _No. There is no pattern in the library._\n\n#### 2. Anything similar at other projects?\n\nAsk around if people at other projects implement anything similar. You can instantly ask in the\ninstant communication channels (Slack, Flowdock, etc)\nor raise this quesion in regular Design or Develoment meetings. Also, you can ask people directly.\n\nAnswer: _No. I could not find anything similar._\n\n#### 3. Can it be used by other projects in the future?\n\nIs there future need for such component at other projects? Discuss this with the other teams, and\ndo this publically in the\ncommunication channels (Slack, Flowdock, etc).\nYou can also ask people directly or raise this question at regular cross-company Design or Development meetings.\n\nAnswer: _Yes. There are at least two more teams interested in the pattern._\n\n#### 4. Implement the pattern\n\nIt seems that you need to add this pattern into the\nDesign System / Pattern Library.\nTo start with process, usually you need to create a ticket in the task tracker system\n(JIRA, Trello, etc) and/or communicate about what you are going to do directly to the people.\nFollow the workflow for implementing new patterns which usually includes task flow, communication standards and code style.\n\n_Wait for release_\n\n#### 5. Use it\n\nYour desired pattern is already a part of the Design System / Pattern Library. Check the\n<i>Design System / Pattern Library website</i>\nfor its documentation.\nUse the component as it is documented. If you have question, do not hesitate to ask in the\ninstant communication channels (Slack, Flowdock, etc).\nThe suggestions and pull requests for the documentation improvement are very welcome.\n\n### Taking the pattern from another project\n\n![](./pattern-journey__pattern-library--from-other-project.png)\n\n#### 1. Is the pattern in the library?\n\nAnswer: _No. There is no pattern in the library._\n\n#### 2. Anything similar at other projects?\n\nAnswer: _Yes. The is similar pattern at other project._\n\n#### 3. Can you take it as it is?\n\nCan you borrow the code of this component and use it without any change? So that both you and the \"donor\" project would\nbe using the same code?\n\nAnswer: _No. It is similar to what I need but I have to alter it._\n\n#### 4. Do other teams ready to use new altered version?\n\nIf you change the existing component so that it meets your requirements,\nare the current users of it able to use the altered version?\nAsk them directly or raise this question publically. As usual,\nyou can communicate in the\ncommunication channels (Slack, Flowdock, etc).\n\nAnswer: _Yes. They are happy with my changes._\n\n#### 5. Implement the pattern\n\n_Wait for release_\n\n#### 6. Use it\n\n### Fix existing pattern\n\n![](./pattern-journey__pattern-library--fix-pattern.png)\n\n#### 1. Is the pattern in the library?\n\nAnswer: _Yes. I found its documenttaion and examples._\n\n#### 2. Does it fulfill all the requirements?\n\nStudy the pattern documentation at the\n<i>Design System / Pattern Library website</i>\nand all the examples provided. This way, you can understand if the pattern is suitable\nfor your specific task.\n\nIf there is no example covering your case, but you suppose that it is still possible\nwithout changing its code, play around with example HTML. For confirmation, ask in the\npeople in communication channels (Slack, Flowdock, etc)\nif the pattern examples can be extended with your case. If they can, it would be nice if you\nmake a pull request illustrating your specific usage.\n\nAnswer: _No. It is close what I need but I need extended functionality._\n\n#### 3. Can it be changed to suit your new requirements while still fitting existing requirements?\n\nFigure out the requirements for the existing component based on the documentation and examples. If you have doubts, ask in the\ninstant communication channels (Slack, Flowdock, etc), at regular meetings\nor in person.\n\nDoes it look that you can provide changes and the component will not be broken in the places it is used now?\n\nAnswer: _Yes. I can provide changes, and nothing will be broken._\n\n#### 4. Implement the pattern\n\n_Wait for release_\n\n## Usage\n\nThis decision helper is meant to be a part of a Design System documentation. Being a React component it can be easily\naltered due to the needs of a specific company or product. Similarly, it can be constantly updated while the processes\nin the Design System are changed and shapen.\n\n#### Source\nThis article was originally published at [varya.me](https://varya.me/design-systems/pattern-journey/).\n</LayoutBlog>","title":"Pattern Journey","description":"A process of maintaining and extending design systems","layout":"LayoutBlog","seo":{"desc":"Visual illustration and explanation of what happens to a pattern on its way from identifying to actual implementation and how different the path might be depending on the situation. The Pattern Journey interactive tool helps to make more people in the organization involved into co-creation of design and development value under the Design Systems umbrella.\n","canonical":"https://varya.me/design-systems/pattern-journey/"}},{"date":"Tue Jan 26 2021 00:00:00 GMT+0000 (Coordinated Universal Time)","slug":"designers-developers-study","content":"\nimport LayoutBlog from '@components/layout/layoutBlog';\n\n<LayoutBlog \n  title=\"What UX designers and UI developers value in each other. LinkedIn research study\"\n  date=\"2021-01-26\"\n  description=\"What do UX designers and UI developers value in each other? This research study on LinkedIn data analyses recommendation texts and bridges the results to the existing scientific and industry knowledge.\"\n  seo={{\n    desc: \"What do UX designers and UI developers value in each other? This research study on LinkedIn data analyses recommendation texts and bridges the results to the existing scientific and industry knowledge.\",\n    canonical: \"https://varya.me/blog/designers-developers-linkedin-study/\"\n  }}>\n\nBoth User Centered Design (UCD) and Agile Software Development (ASD) are widely used methods in the production of user interfaces (UI). However, they “frequently putting contradictory demands on people working with the respective processes” (Jones, 2019). Trying to match different disciplines, the designers and developers are supposed to conduct alignment work which brings them to mutual understanding in the context of their work, revealing “design breakdowns” (Maudet, Leiva, Beaudouin-Lafon & Mackay 2017) early enough.<br/>\nThis research aims to find what designers and developers who consider their collaboration process as successful value in each other.\n\n## Research design\n\nTo obtain data of what is designers’ and developers’ perceptions of working with each other, the researcher collected recommendations from LinkedIn profiles. For the final data analysis, there were selected profiles of _7 designers_ and _9 developers_. The recommendations were filtered so that for developers it was only recommendations from designers (and not from people with other roles), and for designers it was only recommendations from developers. The roles of the people were taken as they identify themselves in their LinkedIn Profiles.\n\n![](./recommendation-example.png)\n\n## Codifying\n\nFor the codifying, the data was collected into one document, anonymised and processed with the help of ATLAS.ti. Full text can be found in Appendix 1.\n\nIn the text of recommendations, the researcher outlined _1st level concepts_ — the attributes that colleagues highlighted as valuable. The concepts were unified into _themes_ following the area which they belong to. The list of concepts by themes can be found in Appendix 2.\n\nThe themes were aggregated into _dimensions_ forming the following scheme.\n\n\n![](./codifying.png)\n\n\nThe dimentions are 1) Wideness of expertise, 2) Hard skills, 3) Professional attributes, 4) Soft skills, and 5) Personal attributes.\n\nWideness of expertise includes knowledge of the technical aspects for designers, understanding of design (particularly, UX) value for developers and knowledge in the business domain for both roles. Hard skills assume direct role-related knowledge and being good at collaboration. Professional attributes list the properties which contribute into both hard and soft skills. Soft skills are the factors positively affecting communication. Finally, personal attributes ease communication and break the barriers.\n\n## Discussion\n\nThe “wideness of expertise” dimension attracts the most. It is noticeable that designers and developers very much value if their colleagues have some knowledge in their area of expertise. These facts resonate with the findings of factors of successful collaboration between UX designers and UI developers. There, the developers complained about “designers do not know enough about the technical limitations when designing solutions” (Jones, 2019). In particular, the developers mentioned that static designs tend “to lack necessary details about the interaction layer in-browser” (Jones, 2019). Similarly, another research mentions the developers’ complaint regarding collaboration with designers as “designers usually don’t take into account the dynamic nature of the data” (Jones, Volker & Gemma, 2016) Generally, the sharing discipline specific knowledge “allows for in-depth discussions about the technical opportunities and constraints of different ideas” (Jones, 2019) and “collaboration is usually smoother when the designer is aware of the developer’s constraints and possibilities” (Maudet et al. 2017) .Correspondingly, the recommendations’ analysis shows that developers value “prototyping” skills of designers which would bring them dynamic designs including the interaction details.\n\nIn addition, both designers and developers highlighted business and product knowledge as positive.\nThis is probably because both designers and developers would like to make mutual decisions regarding the creating product and seeking the missing expertise in their closest colleagues. The value of same-domain expertise can be explained as first the professionals would like to be sure that they can rely on their colleagues' decisions, and for that they validate the colleagues’ knowledge in the area where they themselves are professionals.\n\nOverall research findings complement the studies which outline that “successful collaboration between designers and developers can be found through the following six factors: 1) Close proximity, 2) Early and frequent communication, 3) Shared ideation and problem solving, 4) Crossing over of knowledge and skills, 5) Co-creation and prototyping and 6) Making joint decisions” (Jones & Thoma, 2019).\n\n## Conclusion\n\nThe conducted analysis demonstrated correlation with the existing studies. Even though the obtained data was selected randomly and was less than 20 short recommendation texts in total, it allowed to categorize the valuable attributes of designers and developers and showed the match in valuing cross-disciplinary knowledge. The research approach and the method of obtaining data look as a promising contribution into the following study of positive factors for designers’ and developers’ alignment work.\n\n- [Appendix 1. Raw data](https://varya.me/designers-developers-linkedin-study/Varya-Stepanova__What-UX-designers-and-UI-developers-value-in-each-other__LinkedIn-study__appendix-1.pdf)\n- [Appendix 2. 1st-level concepts and themes](https://varya.me/designers-developers-linkedin-study/Varya-Stepanova__What-UX-designers-and-UI-developers-value-in-each-other__LinkedIn-study__appendix-2.pdf)\n\n## References\n\nJones, Alexander J. 2019. “Factors for Successful Agile Collaboration between UX Designers and Software Developers in a Complex Organisation Item.” Doctoral dissertation, United Kingdom: University of Chester.\n\nJones, A., & Thoma, V. (2019). Determinants for Successful Agile Collaboration between UX Designers and Software Developers in a Complex Organisation. International Journal of Human-Computer Interaction. https://doi.org/10.1080/10447318.2019.1587856\n\nJones, A., Thoma, V., & Newell, G. (2016). Collaboration constraints for designers and developers in an agile environment. Proceedings of the 30th International BCS Human Computer Interaction Conference, HCI 2016.\n\nMaudet, Nolwenn, Germán Leiva, Michel Beaudouin-Lafon, and Wendy Mackay. 2017. “Design Breakdowns: Designer-Developer Gaps in Representing and Interpreting Interactive Systems.” In Proceedings of the 2017 ACM Conference on Computer Supported Cooperative Work and Social Computing, 630–41. Portland Oregon USA: ACM. https://doi.org/10.1145/2998181.2998190.\n\n#### Source\nThis article was originally published at [varya.me](https://varya.me/blog/designers-developers-linkedin-study/).\n\n</LayoutBlog>","title":"What UX designers and UI developers value in each other. LinkedIn research study","layout":"LayoutBlog","seo":{"desc":"What do UX designers and UI developers value in each other? This research study on LinkedIn data analyses recommendation texts and bridges the results to the existing scientific and industry knowledge.\n","canonical":"https://varya.me/blog/designers-developers-linkedin-study/"}}]},"__N_SSG":true}